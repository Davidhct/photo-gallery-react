{"version":3,"sources":["components/search-box/search-box.component.jsx","components/item-list/item-list.component.jsx","components/item/item.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["SearchBox","props","type","className","placeholder","onChange","handleChange","ItemList","photos","Item","src","photo","largeImageURL","alt","App","event","val","target","value","setState","searchField","console","log","fetch","state","apiUrl","apiKey","then","res","json","data","hits","catch","err","error","images","this","map","id","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAIaA,EAAY,SAACC,GAAD,OACvB,uBACEC,KAAK,SACLC,UAAU,SACVC,YAAY,gBACZC,SAAUJ,EAAMK,gBCLPC,G,MAAW,SAACN,GAAD,OACtB,qBAAKE,UAAU,YAAf,SAA4BF,EAAMO,WCDvBC,G,MAAO,SAACR,GAAD,OAClB,qBAAKE,UAAU,OAAf,SACE,qBAAKO,IAAG,UAAKT,EAAMU,MAAMC,eAAiBC,IAAI,YC2DnCC,G,wDA1Db,aAAe,IAAD,8BACZ,gBAuBFR,aAAe,SAACS,GACd,IAAIC,EAAMD,EAAME,OAAOC,MACvB,EAAKC,SAAS,CAAEC,YAAaJ,IACjB,KAARA,EACF,EAAKG,SAAS,CAAEX,OAAQ,MAExBa,QAAQC,IAAIP,EAAME,OAAOC,OACzBK,MAAM,GAAD,OACA,EAAKC,MAAMC,OADX,iBAC0B,EAAKD,MAAME,OADrC,cACiDV,EADjD,kCAGFW,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAU,EAAKX,SAAS,CAAEX,OAAQsB,EAAKC,UAC5CC,OAAM,SAACC,GAAD,OAASZ,QAAQa,MAAMD,QAlClC,EAAKT,MAAQ,CACXhB,OAAQ,GACRY,YAAa,GACbK,OAAQ,0BACRC,OAAQ,sCANE,E,0CAwCd,WACE,IAAMS,EAASC,KAAKZ,MAAMhB,OAAO6B,KAAI,SAAC1B,GAAD,OACnC,cAAC,EAAD,CAAqBA,MAAOA,GAAjBA,EAAM2B,OAInB,OADAjB,QAAQC,IAAIc,KAAKZ,MAAMhB,QAErB,sBAAKL,UAAU,MAAf,UACE,+CACA,cAAC,EAAD,CAAWG,aAAc8B,KAAK9B,eAC7B8B,KAAKZ,MAAMJ,YAAYmB,OAAS,EAC/B,cAAC,EAAD,CAAU/B,OAAQ2B,IAChB,Y,GArDMK,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d4117d0e.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport \"./search-box.styles.css\";\r\n\r\nexport const SearchBox = (props) => (\r\n  <input\r\n    type=\"search\"\r\n    className=\"search\"\r\n    placeholder=\"search photos\"\r\n    onChange={props.handleChange}\r\n  />\r\n);\r\n","import React from \"react\";\r\n\r\nimport \"./item-list.styles.css\";\r\n\r\nexport const ItemList = (props) => (\r\n  <div className=\"item-list\">{props.photos}</div>\r\n);\r\n","import React from \"react\";\r\n\r\nimport \"./item.styles.css\";\r\n\r\nexport const Item = (props) => (\r\n  <div className=\"item\">\r\n    <img src={`${props.photo.largeImageURL}`} alt=\"img\" />\r\n  </div>\r\n);\r\n","import React, { Component } from \"react\";\nimport { SearchBox } from \"./components/search-box/search-box.component\";\nimport { ItemList } from \"./components/item-list/item-list.component\";\nimport { Item } from \"./components/item/item.component\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      photos: [],\n      searchField: \"\",\n      apiUrl: \"https://pixabay.com/api\",\n      apiKey: \"22698874-5e3ff1ef81847d81571af2bbf\",\n    };\n  }\n\n  // componentDidMount() {\n\n  // }\n  // componentDidUpdate(prevProps, prevState) {\n  //   if (prevProps.searchField !== prevState.searchField) {\n  //     fetch(\n  //       `${this.state.apiUrl}/?key=${this.state.apiKey}&q=${this.state.searchField}&image_type=photo&per_page=20`\n  //     )\n  //       .then((res) => res.json())\n  //       .then((data) => this.setState({ photos: data.hits }))\n  //       .catch((err) => console.error(err));\n  //   }\n  // }\n\n  handleChange = (event) => {\n    let val = event.target.value;\n    this.setState({ searchField: val });\n    if (val === \"\") {\n      this.setState({ photos: [] });\n    } else {\n      console.log(event.target.value);\n      fetch(\n        `${this.state.apiUrl}/?key=${this.state.apiKey}&q=${val}&image_type=photo&per_page=20`\n      )\n        .then((res) => res.json())\n        .then((data) => this.setState({ photos: data.hits }))\n        .catch((err) => console.error(err));\n    }\n  };\n\n  render() {\n    const images = this.state.photos.map((photo) => (\n      <Item key={photo.id} photo={photo} />\n    ));\n\n    console.log(this.state.photos);\n    return (\n      <div className=\"App\">\n        <h1>Photo Gallery</h1>\n        <SearchBox handleChange={this.handleChange} />\n        {this.state.searchField.length > 0 ? (\n          <ItemList photos={images} />\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}